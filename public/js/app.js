"use strict";!function(){for(var t=function(t){t.el.textContent=t.msg,t.el.classList.remove("hidden"),t.el.classList.add("alert-"+t.alert,"visible"),"delete"!=t.data.type&&setTimeout(function(){t.el.classList.add("hidden"),t.el.classList.remove("alert-"+t.alert,"visible")},5e3)},e=document.getElementsByClassName("form"),a=function(a,n){e[a].addEventListener("submit",function(n){n.preventDefault();var c=JSON.parse(this.getAttribute("data-api")),o=e[a].getElementsByClassName("form__alert"),i=new FormData(e[a]);try{axios({method:c.method,url:c.action,headers:{"Content-Type":"multipart/form-data"},data:i}).then(function(e){var a=e.data,n=a.alert,c=a.msg;a.type;t({el:o[0],alert:n,msg:c,data:e.data})}).catch(function(e){t({el:o[0],alert:"danger",msg:"Ошибка сервера",data:{type:"err"}})})}catch(e){t({el:o[0],alert:"danger",msg:"Ошибка при отправке формы",data:{type:"err"}})}})},n=0,c=e.length;c>n;n++)a(n)}(),function(){!function(t,e,a){t&&t.addEventListener("input",function(n){n.preventDefault();var c=JSON.parse(this.getAttribute("data-api")),o=new FormData(t),i=c.action;o.forEach(function(t,e){i=i.replace("".concat(e,"/@dummy"),"".concat(e,"/").concat(t||null))});try{axios({method:c.method,url:i,headers:{"Content-Type":"multipart/form-data"}}).then(function(t){var n=t.data;a(e,void 0!==n&&n)}).catch(function(t){console.log("Ошибка на стороне сервера")})}catch(t){console.log("Ошибка на стороне клиента")}})}(document.getElementById("form_search-table-admin-material"),document.getElementById("table__body_admin-material"),function(t,e){var a=[];e?(console.log(e),a=e.map(function(t){return'<tr class="table__row '.concat(t.status?"highlight-warning":"",'">\n\t\t\t\t\t<td class="table__col table__col_info"> \n\t\t\t\t\t\t<i class="fa fa-info-circle" data-tooltip="').concat(t.remark,'"></i> \n\t\t\t\t\t</td>\n\t\t\t\t\t<td class="table__col table__col_name">').concat(t.name," ").concat(t.mark,'</td>\n\t\t\t\t\t<td class="table__col table__col_name">').concat(t.standart,'</td>\n\t\t\t\t\t<td class="table__col table__col_date-create">').concat(t.date_create,'</td>\n\t\t\t\t\t<td class="table__col table__col_btn">\n\t\t\t\t\t\t<a class="table__btn btn btn-success" href="').concat(location.pathname,"/edit/id/").concat(t.id,'">Редактировать</a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>')}),t.innerHTML=a.join()):t.innerHTML=""})}(),function(){!function(){for(var t=document.getElementsByClassName("show-modal"),e=0,a=t.length;a>e;e++)t[e].addEventListener("click",function(){var t=this.getAttribute("data-id-modal");document.querySelector(".modal#"+t).classList.add("active")})}();!function(){for(var t=document.getElementsByClassName("modal-close"),e=0,a=t.length;a>e;e++)t[e].addEventListener("click",function(){document.querySelector(".modal.active").classList.remove("active")})}()}(),document.querySelector(".tab")&&function(){if(window.location.hash){var t=window.location.hash.replace("#id",""),e=document.querySelector(".tab__title"),a=document.querySelector(".tab__item[data-id=".concat(t,"]")),n=document.getElementById(t);a.classList.add("active"),n.classList.add("active"),e.textContent=a.textContent}else{var c=document.querySelector(".tab__item"),o=document.querySelector(".tab__content");c.classList.add("active"),o.classList.add("active")}for(var i=document.getElementsByClassName("tab__item"),l=function(t,e){i[t].addEventListener("click",function(e){var a=this,n=i[t].parentNode.querySelector(".tab__item.active");n&&(document.getElementById(n.getAttribute("data-id")).classList.remove("active"),n.classList.remove("active")),e.path.some(function(t){if(t.classList.contains("tab")){var e=t.querySelector(".tab__title");return e&&(e.textContent=a.textContent),!0}}),this.classList.add("active"),window.location.hash="id"+this.getAttribute("data-id"),document.getElementById(this.getAttribute("data-id")).classList.add("active")})},s=0,d=i.length;d>s;s++)l(s)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
