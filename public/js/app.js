"use strict";!function(){for(var t=function(t){var e=new CustomEvent("FORM_SUBMISSION",{detail:t.data}),a=t.data.type,i=void 0!==a&&a;document.dispatchEvent(e),t.el.textContent=t.msg,t.el.classList.remove("hidden"),t.el.classList.add("alert-"+t.alert,"visible"),setTimeout(function(){t.el.classList.add("hidden"),t.el.classList.remove("alert-"+t.alert,"visible")},"delete"==i?1e7:5e3)},e=document.getElementsByClassName("form"),a=function(a,i){e[a].addEventListener("submit",function(i){i.preventDefault();var n=JSON.parse(this.getAttribute("data-api")),s=e[a].getElementsByClassName("form__alert"),d=new FormData(e[a]);try{axios({method:n.method,url:n.action,headers:{"Content-Type":"multipart/form-data"},data:d}).then(function(i){var n=i.data,d=n.alert,c=n.msg;"add"==n.type&&e[a].reset(),t({el:s[0],alert:d,msg:c,data:i.data})}).catch(function(e){t({el:s[0],alert:"danger",msg:"Ошибка сервера",data:{type:"err"}})})}catch(e){t({el:s[0],alert:"danger",msg:"Ошибка при отправке формы",data:{type:"err"}})}})},i=0,n=e.length;n>i;i++)a(i)}(),function(){!function(){for(var t=document.getElementsByClassName("show-modal"),e=0,a=t.length;a>e;e++)t[e].addEventListener("click",function(){var t=this.getAttribute("data-id-modal");document.querySelector(".modal#"+t).classList.add("active")})}();!function(){for(var t=document.getElementsByClassName("modal-close"),e=0,a=t.length;a>e;e++)t[e].addEventListener("click",function(){document.querySelector(".modal.active").classList.remove("active")})}()}(),document.querySelector(".tab")&&function(){if(window.location.hash){var t=window.location.hash.replace("#id",""),e=document.querySelector(".tab__item[data-id=".concat(t,"]")),a=document.getElementById(t);e.classList.add("active"),a.classList.add("active")}else{var i=document.querySelector(".tab__item"),n=document.querySelector(".tab__content");i.classList.add("active"),n.classList.add("active")}for(var s=document.getElementsByClassName("tab__item"),d=function(t,e){s[t].addEventListener("click",function(e){var a=this,i=s[t].parentNode.querySelector(".tab__item.active");i&&(document.getElementById(i.getAttribute("data-id")).classList.remove("active"),i.classList.remove("active")),e.path.some(function(t){if(t.classList.contains("tab")){var e=t.querySelector(".tab__title");return e&&(e.textContent=a.textContent),!0}}),this.classList.add("active"),window.location.hash="id"+this.getAttribute("data-id"),document.getElementById(this.getAttribute("data-id")).classList.add("active")})},c=0,o=s.length;o>c;c++)d(c)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
